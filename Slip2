Q1) Write a program to read the First Name and Last Name of a person, his weight and height

using command line arguments. Calculate the BMI Index which is defined as the individual's

body mass divided by the square of their height.

(Hint: BMI = Wts. In kgs / (ht)Â²)

public class BMICalculator {

public static void main(String[] args) {

if (args.length != 4) {

System.out.println("Usage: java BMICalculator <First Name>

<Last Name> <Weight (in kg)> <Height (in meters)>");

return;

}



String firstName = args[0];

String lastName = args[1];

double weight = Double.parseDouble(args[2]);



kilograms

double height = Double.parseDouble(args[3]);



double bmi = weight / (height * height);



System.out.println("Person: " + firstName + " " + lastName);

System.out.println("Weight: " + weight + " kg");

System.out.println("Height: " + height + " meters");

System.out.println("BMI Index: " + String.format("%.2f", bmi));



if (bmi < 18.5) {

System.out.println("Underweight");

} else if (bmi >= 18.5 && bmi < 24.9) {

System.out.println("Normal weight");

} else if (bmi >= 25 && bmi < 29.9) {

System.out.println("Overweight");

} else {
System.out.println("Obese");

}

}

}


Define a class CricketPlayer (name,no_of_innings,no_of_times_notout, totatruns, bat_avg).

Create an array of n player objects Calculate the batting average for each player using static

method avg(). Define a static sort method which sorts the array on the basis of average. Display

the player details in sorted order.


import java.util.Arrays;
import java.util.Scanner;

class CricketPlayer {
    private String name;
    private int noOfInnings;
    private int noOfTimesNotOut;
    private int totalRuns;
    private double battingAverage;

    
    public CricketPlayer(String name, int noOfInnings, int noOfTimesNotOut, int totalRuns) {
        this.name = name;
        this.noOfInnings = noOfInnings;
        this.noOfTimesNotOut = noOfTimesNotOut;
        this.totalRuns = totalRuns;
        this.battingAverage = 0.0; // Default value, calculated later
    }

    
    public double getBattingAverage() {
        return battingAverage;
    }

  
    public static void calculateAverage(CricketPlayer player) {
        if (player.noOfInnings - player.noOfTimesNotOut > 0) {
            player.battingAverage = (double) player.totalRuns / (player.noOfInnings - player.noOfTimesNotOut);
        } else {
            player.battingAverage = 0.0; // Set average to 0 if division is not possible
        }
    }

   
    public static void sortPlayers(CricketPlayer[] players) {
        Arrays.sort(players, (p1, p2) -> Double.compare(p2.getBattingAverage(), p1.getBattingAverage()));
    }

   
    @Override
    public String toString() {
        return "Name: " + name +
                ", Innings: " + noOfInnings +
                ", Not Out: " + noOfTimesNotOut +
                ", Total Runs: " + totalRuns +
                ", Batting Average: " + String.format("%.2f", battingAverage);
    }

    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        System.out.print("Enter the number of players: ");
        int n = scanner.nextInt();
        CricketPlayer[] players = new CricketPlayer[n];

        
        for (int i = 0; i < n; i++) {
            System.out.println("\nEnter details for player " + (i + 1) + ":");
            System.out.print("Name: ");
            scanner.nextLine(); // Consume newline
            String name = scanner.nextLine();
            System.out.print("Number of innings: ");
            int noOfInnings = scanner.nextInt();
            System.out.print("Number of times not out: ");
            int noOfTimesNotOut = scanner.nextInt();
            System.out.print("Total runs: ");
            int totalRuns = scanner.nextInt();

            players[i] = new CricketPlayer(name, noOfInnings, noOfTimesNotOut, totalRuns);
        }

        
        for (CricketPlayer player : players) {
            CricketPlayer.calculateAverage(player);
        }

        
        CricketPlayer.sortPlayers(players);

        
        System.out.println("\nPlayer details sorted by batting average:");
        for (CricketPlayer player : players) {
            System.out.println(player);
        }

        scanner.close();
    }
}
